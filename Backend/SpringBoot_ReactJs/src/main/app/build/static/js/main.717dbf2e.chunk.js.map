{"version":3,"sources":["services/ApiService.js","component/ListPerson.js","component/AddPerson.js","component/EditPerson.js","App.js","serviceWorker.js","index.js"],"names":["PERSON_API_BASE_URL","axios","get","id","delete","person","post","console","log","put","ListUserComponent","props","state","persons","message","deletePerson","bind","editPerson","addPerson","reloadUserList","this","ApiService","fetchPersons","then","res","data","setState","filter","window","localStorage","setItem","history","push","removeItem","Fragment","CssBaseline","Container","fixed","Typography","variant","style","Button","color","onClick","TableContainer","component","Paper","Table","className","useStyles","table","aria-label","TableHead","TableRow","StyledTableCell","align","TableBody","map","row","StyledTableRow","key","scope","name","age","address","email","Component","display","justifyContent","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","root","action","hover","makeStyles","minWidth","AddUserComponent","fields","errors","handleChange","submituserRegistrationForm","e","target","value","preventDefault","validateForm","formIsValid","match","RegExp","test","method","formContainer","onSubmit","TextField","type","placeholder","fullWidth","margin","onChange","errorMsg","flexFlow","EditUserComponent","saveUser","loadUser","fetchPersonById","getItem","readOnly","App","path","exact","ListPerson","AddPerson","EditPerson","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.717dbf2e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//const PERSON_API_BASE_URL = 'https://springboot-reactjs.cfapps.io/Person';\r\nconst PERSON_API_BASE_URL ='http://localhost:8080/Person';\r\nclass ApiService {\r\n\r\n    fetchPersons() {\r\n        return axios.get(PERSON_API_BASE_URL);\r\n    }\r\n\r\n    fetchPersonById(id) {\r\n        return axios.get(PERSON_API_BASE_URL + '/' + id);\r\n    }\r\n\r\n    deletePerson(id) {\r\n        return axios.delete(PERSON_API_BASE_URL + '/' + id);\r\n    }\r\n\r\n    addPerson(person) {\r\n        return axios.post(\"\"+PERSON_API_BASE_URL, person);\r\n    }\r\n\r\n    editPerson(person) {\r\n        console.log(\"Axioms \", person.id)\r\n        return axios.put(PERSON_API_BASE_URL + '/' + person.id, person);\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService();\r\n","import React, { Component } from 'react'\r\nimport ApiService from \"../services/ApiService\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { TableContainer } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nclass ListUserComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            persons: [],\r\n            message: null\r\n        }\r\n        this.deletePerson = this.deletePerson.bind(this);\r\n        this.editPerson = this.editPerson.bind(this);\r\n        this.addPerson = this.addPerson.bind(this);\r\n        this.reloadUserList = this.reloadUserList.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadUserList();\r\n    }\r\n\r\n    reloadUserList() {\r\n        ApiService.fetchPersons()\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                this.setState({persons: res.data})\r\n                console.log(res.data)\r\n            });\r\n    }\r\n\r\n    deletePerson(id) {\r\n        ApiService.deletePerson(id)\r\n           .then(res => {\r\n               this.setState({message : 'User deleted successfully.'});\r\n               this.setState({persons: this.state.persons.filter(person => person.id !== id)});\r\n           })\r\n\r\n    }\r\n\r\n    editPerson(id) {\r\n        window.localStorage.setItem(\"id\", id);\r\n        this.props.history.push('/edit-person');\r\n    }\r\n\r\n    addPerson() {\r\n        window.localStorage.removeItem(\"id\");\r\n        this.props.history.push('/add-person');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <CssBaseline />\r\n            <Container fixed>\r\n                <Typography variant=\"h4\" style={style}>User Details</Typography>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.addPerson()}>\r\n                    Add User\r\n                </Button>\r\n                <TableContainer component={Paper}>\r\n                <Table className={useStyles.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Id</StyledTableCell>\r\n                            <StyledTableCell>Name</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Age</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Address</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Email</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.persons.map(row => (\r\n                            <StyledTableRow  key={row.id}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.id}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.name}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.age}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.address}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\" onClick={() => this.editPerson(row.id)}><CreateIcon /></StyledTableCell>\r\n                                <StyledTableCell align=\"right\" onClick={() => this.deletePerson(row.id)}><DeleteIcon /></StyledTableCell>\r\n\r\n                            </StyledTableRow >\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n           </Container>\r\n           </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst style ={\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  });\r\n\r\nexport default ListUserComponent;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ApiService from \"../services/ApiService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import FormValidator from './FormValidator';\r\n\r\n\r\nclass AddUserComponent extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          fields: {\r\n            name: '',\r\n            age: '',\r\n            address: '',\r\n            email: '',\r\n          },\r\n          errors: {}\r\n        }\r\n  \r\n       this.handleChange = this.handleChange.bind(this);\r\n       this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\r\n  \r\n      };\r\n  \r\n      handleChange (e) { \r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n          fields\r\n        });\r\n  \r\n      }\r\n  \r\n      submituserRegistrationForm(e) {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let person = { name: this.state.fields.name, age: this.state.fields.age, address: this.state.fields.address, email: this.state.fields.email};\r\n            console.log(person)\r\n            ApiService.addPerson(person)\r\n                .then(res => {\r\n                    this.setState({message : 'Person added successfully.'});\r\n                    this.props.history.push('/persons');\r\n                });\r\n            let fields = {};\r\n            fields[\"name\"] = \"\";\r\n            fields[\"age\"] = \"\";\r\n            fields[\"email\"] = \"\";\r\n            fields[\"address\"] = \"\";\r\n            this.setState({fields:fields});\r\n        }\r\n       \r\n      }\r\n  \r\n      validateForm() {\r\n  \r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n  \r\n        if (!fields[\"name\"]) {\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"*Please enter your name.\";\r\n        }\r\n  \r\n        if (typeof fields[\"name\"] !== \"undefined\") {\r\n          if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"*Please enter alphabet characters only.\";\r\n          }\r\n        }\r\n  \r\n        if (!fields[\"email\"]) {\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"*Please enter your email-ID.\";\r\n        }\r\n  \r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n          //regular expression for email validation\r\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          if (!pattern.test(fields[\"email\"])) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n          }\r\n        }\r\n  \r\n        if (!fields[\"age\"]) {\r\n          formIsValid = false;\r\n          errors[\"age\"] = \"*Please enter your age.\";\r\n        }\r\n  \r\n        if (typeof fields[\"age\"] !== \"undefined\") {\r\n            if (!fields[\"age\"].match(/^[0-9]*$/)) {\r\n              formIsValid = false;\r\n              errors[\"age\"] = \"*Please enter Numerical value only.\";\r\n            }\r\n          }\r\n\r\n        if (!fields[\"address\"]) {\r\n            formIsValid = false;\r\n            errors[\"address\"] = \"*Please enter your address.\";\r\n          }\r\n    \r\n          if (typeof fields[\"address\"] !== \"undefined\") {\r\n            if (!fields[\"address\"].match(/^[a-zA-Z ]*$/)) {\r\n              formIsValid = false;\r\n              errors[\"address\"] = \"*Please enter alphabet characters only.\";\r\n            }\r\n          }\r\n\r\n        this.setState({\r\n          errors: errors\r\n        });\r\n        \r\n        return formIsValid;\r\n      }\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n        <Container fixed>\r\n            \r\n        <Typography variant=\"h4\" style={style}>Add Person</Typography> \r\n      \r\n          <form method=\"post\"  name=\"userRegistrationForm\" style={formContainer} onSubmit= {this.submituserRegistrationForm} >\r\n          \r\n          <TextField type=\"text\" placeholder=\"name\" fullWidth margin=\"normal\" name=\"name\" value={this.state.fields.name} onChange={this.handleChange} />\r\n          <span style={style.errorMsg}>{this.state.errors.name}</span>\r\n         \r\n          <TextField type=\"text\" placeholder=\"age\" fullWidth margin=\"normal\" name=\"age\" value={this.state.fields.age} onChange={this.handleChange} />\r\n          <span style={style.errorMsg}>{this.state.errors.age}</span>\r\n\r\n          <TextField type=\"text\" placeholder=\"address\" fullWidth margin=\"normal\" name=\"address\" value={this.state.fields.address} onChange={this.handleChange} />\r\n          <span style={style.errorMsg}>{this.state.errors.address}</span>\r\n\r\n          <TextField type=\"text\" placeholder=\"email\" fullWidth margin=\"normal\" name=\"email\" value={this.state.fields.email} onChange={this.handleChange} />\r\n          <span style={style.errorMsg}>{this.state.errors.email}</span>\r\n            \r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.submituserRegistrationForm}>Save</Button>\r\n          </form>\r\n      </Container>\r\n      </React.Fragment>\r\n  \r\n        );\r\n    }\r\n  \r\n  }\r\n  \r\n  const formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n    };\r\n    \r\n     const style ={\r\n     display: 'flex',\r\n     justifyContent: 'center',\r\n     errorMsg: {\r\n        color: 'red'\r\n     }\r\n     }\r\n  \r\nexport default AddUserComponent;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ApiService from \"../services/ApiService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nclass EditUserComponent extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            id: '',\r\n            name: '',\r\n            age: '',\r\n            address: '',\r\n            email: '',\r\n        errors: {}\r\n    }\r\n        this.saveUser = this.saveUser.bind(this);\r\n        this.loadUser = this.loadUser.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    loadUser() {\r\n        ApiService.fetchPersonById(window.localStorage.getItem(\"id\"))\r\n            .then((res) => {\r\n                let person = res.data;\r\n                console.log(person)\r\n                this.setState({\r\n                id: person.id,\r\n                name: person.name,\r\n                age: person.age,\r\n                address: person.address,\r\n                email: person.email,\r\n                })\r\n            });\r\n    }\r\n\r\n    onChange = (e) =>\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let person = {id: this.state.id, name: this.state.name, age: this.state.age, address: this.state.address, email: this.state.email};\r\n            console.log(\"Update \",person)\r\n        ApiService.editPerson(person)\r\n            .then(res => {\r\n                this.setState({message : 'Person added successfully.'});\r\n                this.props.history.push('/persons');\r\n            });\r\n        }\r\n    }\r\n\r\n    validateForm() {\r\n  \r\n        let fields = this.state;\r\n        console.log(fields)\r\n        let errors = {};\r\n        let formIsValid = true;\r\n  \r\n        if (!fields[\"name\"]) {\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"*Please enter your name.\";\r\n        }\r\n  \r\n        if (typeof fields[\"name\"] !== \"undefined\") {\r\n          if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"*Please enter alphabet characters only.\";\r\n          }\r\n        }\r\n  \r\n        if (!fields[\"email\"]) {\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"*Please enter your email-ID.\";\r\n        }\r\n  \r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n          //regular expression for email validation\r\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          if (!pattern.test(fields[\"email\"])) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n          }\r\n        }\r\n  \r\n        if (!fields[\"age\"]) {\r\n          formIsValid = false;\r\n          errors[\"age\"] = \"*Please enter your age.\";\r\n        }\r\n\r\n  \r\n        if (!fields[\"address\"]) {\r\n            formIsValid = false;\r\n            errors[\"address\"] = \"*Please enter your address.\";\r\n          }\r\n    \r\n          if (typeof fields[\"address\"] !== \"undefined\") {\r\n            if (!fields[\"address\"].match(/^[a-zA-Z ]*$/)) {\r\n              formIsValid = false;\r\n              errors[\"address\"] = \"*Please enter alphabet characters only.\";\r\n            }\r\n          }\r\n\r\n        this.setState({\r\n          errors: errors\r\n        });\r\n        \r\n        return formIsValid;\r\n      }\r\n  \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <CssBaseline />\r\n            <Container fixed>\r\n            <Typography variant=\"h4\" style={style}>Edit Person</Typography>\r\n            <form method=\"post\"  name=\"saveUser\" style={formContainer} onSubmit= {this.saveUser}>\r\n                    <TextField type=\"text\" placeholder=\"id\" fullWidth margin=\"normal\" name=\"id\" readOnly value={this.state.id}/>\r\n                \r\n                    <TextField type=\"text\" placeholder=\"name\" fullWidth margin=\"normal\" name=\"name\" value={this.state.name} onChange={this.onChange}/>\r\n                    <span style={style.errorMsg}>{this.state.errors.name}</span>\r\n\r\n                    <TextField type=\"text\" placeholder=\"age\" fullWidth margin=\"normal\" name=\"age\" value={this.state.age} onChange={this.onChange}/>\r\n                    <span style={style.errorMsg}>{this.state.errors.age}</span>\r\n\r\n                    <TextField type=\"text\" placeholder=\"address\" fullWidth margin=\"normal\" name=\"address\" value={this.state.address} onChange={this.onChange}/>\r\n                    <span style={style.errorMsg}>{this.state.errors.address}</span>\r\n\r\n                    <TextField type=\"email\" placeholder=\"email\" fullWidth margin=\"normal\" name=\"email\" value={this.state.email} onChange={this.onChange}/>\r\n                    <span style={style.errorMsg}>{this.state.errors.email}</span>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.saveUser}>Save</Button>\r\n\r\n            </form>\r\n        </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n}\r\n\r\n    const formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n    };\r\n    \r\n\r\nconst style ={\r\ndisplay: 'medium',\r\njustifyContent: 'center',\r\nerrorMsg: {\r\n    color: 'red'\r\n }\r\n}\r\n\r\nexport default EditUserComponent;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ListPerson from \"./component/ListPerson\";\nimport AddPerson from \"./component/AddPerson\";\nimport EditPerson from \"./component/EditPerson\";\n\nfunction App() {\n  return (\n      <div className=\"container\">\n          <Router>\n              <div className=\"col-md-6\">\n                  <h1 className=\"text-center\" style={style}>React User Application</h1>\n                  <Switch>\n                      <Route path=\"/\" exact component={ListPerson} />\n                      <Route path=\"/persons\" component={ListPerson} />\n                      <Route path=\"/add-person\" component={AddPerson} />\n                      <Route path=\"/edit-person\" component={EditPerson} />\n                  </Switch>\n              </div>\n          </Router>\n      </div>\n  );\n}\n\nconst style = {\n    color: 'red',\n    margin: '10px'\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}